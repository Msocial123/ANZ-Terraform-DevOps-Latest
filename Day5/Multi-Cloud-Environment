name: Terraform GKE Multi-Env Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      action:
        description: 'Terraform Action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

jobs:
  terraform:
    name: Deploy to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: gke-cluster

    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Decode GCP credentials
        run: echo "${{ secrets.GCP_CREDENTIALS }}" | base64 --decode > "${HOME}/gcp-key.json"

      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcp-key.json" >> $GITHUB_ENV

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -var-file=${{ github.event.inputs.environment }}.tfvars -input=false

      - name: Terrascan Security Check
        uses: accurics/terrascan-action@v1.3.0
        with:
          iac_type: "terraform"
          iac_version: "v14"
          policy_type: "gcp"
          iac_dir: "gke-cluster"

      - name: Terraform Apply or Destroy
        if: github.event.inputs.action != 'plan'
        run: |
          if [[ "${{ github.event.inputs.action }}" == "apply" ]]; then
            terraform apply -auto-approve -input=false -var-file=${{ github.event.inputs.environment }}.tfvars
          elif [[ "${{ github.event.inputs.action }}" == "destroy" ]]; then
            terraform destroy -auto-approve -input=false -var-file=${{ github.event.inputs.environment }}.tfvars
          fi
